{"ast":null,"code":"var _jsxFileName = \"/Users/Reverie/Downloads/07-react-ts-starting-project/src/Components/Todos/Todos.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport styles from './Todos.module.css';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodosContext } from '../../Store/todo-context'; //generic type defined here. Define own props. Can make option by 'items?:'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todos = props => {\n  _s();\n\n  const todoCtx = useContext(TodosContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.todos,\n    children: todoCtx.items.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      text: item.text,\n      onRemoveTodo: todoCtx.removeTodo.bind(null, item.id),\n      children: item.text\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todos, \"Vu89Pgijtd6CsaslYGYiJ7mxtZs=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/Reverie/Downloads/07-react-ts-starting-project/src/Components/Todos/Todos.tsx"],"names":["React","useContext","styles","TodoItem","TodosContext","Todos","props","todoCtx","todos","items","map","item","text","removeTodo","bind","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,YAAT,QAA6B,0BAA7B,C,CAEA;;;;AACA,MAAMC,KAGJ,GAAIC,KAAD,IAAW;AAAA;;AACd,QAAMC,OAAO,GAAGN,UAAU,CAACG,YAAD,CAA1B;AAEA,sBACE;AAAI,IAAA,SAAS,EAAEF,MAAM,CAACM,KAAtB;AAAA,cACGD,OAAO,CAACE,KAAR,CAAcC,GAAd,CAAmBC,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,MAAA,YAAY,EAAEL,OAAO,CAACM,UAAR,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8BH,IAAI,CAACI,EAAnC,CAHhB;AAAA,gBAKGJ,IAAI,CAACC;AALR,OACOD,IAAI,CAACI,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnBD;;GAAMV,K;;KAAAA,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport TodoModel from '../../Models/TodoModel';\nimport styles from './Todos.module.css';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodosContext } from '../../Store/todo-context';\n\n//generic type defined here. Define own props. Can make option by 'items?:'\nconst Todos: React.FC<{\n  items: TodoModel[];\n  onRemoveTodo: (id: string) => void;\n}> = (props) => {\n  const todoCtx = useContext(TodosContext);\n\n  return (\n    <ul className={styles.todos}>\n      {todoCtx.items.map((item) => (\n        <TodoItem\n          key={item.id}\n          text={item.text}\n          onRemoveTodo={todoCtx.removeTodo.bind(null, item.id)}\n        >\n          {item.text}\n        </TodoItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}